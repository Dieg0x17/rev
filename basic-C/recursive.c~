int factorial(int n){
	if (n < 2){
		return 1;
	} else {
		return n*factorial(--n);	
	}
}

	/*
	   0x080483ec <+0>:     push   %ebp
	   0x080483ed <+1>:     mov    %esp,%ebp
	   0x080483ef <+3>:     sub    $0x4,%esp
	   0x080483f2 <+6>:     cmpl   $0x1,0x8(%ebp)
	   0x080483f6 <+10>:    jg     0x80483ff <factorial+19>
	   0x080483f8 <+12>:    mov    $0x1,%eax
	   0x080483fd <+17>:    jmp    0x8048412 <factorial+38>
	   0x080483ff <+19>:    subl   $0x1,0x8(%ebp)
	   0x08048403 <+23>:    mov    0x8(%ebp),%eax
	   0x08048406 <+26>:    mov    %eax,(%esp)
	   0x08048409 <+29>:    call   0x80483ec <factorial>
	   0x0804840e <+34>:    imul   0x8(%ebp),%eax
	   0x08048412 <+38>:    leave  
	   0x08048413 <+39>:    ret   
	*/

int main() {

	return factorial(5);

}

	/*
	   0x08048414 <+0>:     push   %ebp
	   0x08048415 <+1>:     mov    %esp,%ebp
	   0x08048417 <+3>:     sub    $0x4,%esp
	   0x0804841a <+6>:     movl   $0x5,(%esp)
	   0x08048421 <+13>:    call   0x80483ec <factorial>
	   0x08048426 <+18>:    leave  
	   0x08048427 <+19>:    ret   
	*/
